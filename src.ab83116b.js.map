{"version":3,"sources":["index.js"],"names":["refs","hours","document","querySelector","minutes","secunds","targetTimer","save","timestamp","convertS","s","Math","floor","innerHTML","toString","padStart","intervalId","secund","printTimeStamp","insertAdjacentHTML","onTimerClick","e","target","textContent","clearInterval","setInterval","addEventListener","imitatedServer","then","res","times","push","catch","console","log","key","type","data","Promise","rej","setTimeout","random","JSON","parse","localStorage","getItem","setItem","stringify","min","max","getRandomInt","forEach"],"mappings":";;;AA2FA,aA3FA,QAAA,oBAEA,MAAMA,EAAO,CACXC,MAAOC,SAASC,cAAc,UAC9BC,QAASF,SAASC,cAAc,YAChCE,QAASH,SAASC,cAAc,YAChCG,YAAaJ,SAASC,cAAc,iBACpCI,KAAML,SAASC,cAAc,SAC7BK,UAAWN,SAASC,cAAc,eAGpC,SAASM,EAASC,GACVT,MAAAA,EAAQU,KAAKC,MAAMF,EAAI,GAAK,IAClCA,GAAQ,KAAUT,EACZG,MAAAA,EAAUO,KAAKC,MAAMF,EAAI,IAEzBL,EADNK,GAAQ,GAAKN,EAEbJ,EAAKC,MAAMY,UAAYZ,EAAMa,WAAWC,SAAS,EAAG,GACpDf,EAAKI,QAAQS,UAAYT,EAAQU,WAAWC,SAAS,EAAG,GACxDf,EAAKK,QAAQQ,UAAYR,EAAQS,WAAWC,SAAS,EAAG,GAE1D,IACIC,EADAC,EAAS,EAGb,SAASC,EAAeR,GAChBT,MAAAA,EAAQU,KAAKC,MAAMF,EAAI,GAAK,IAClCA,GAAQ,KAAUT,EACZG,MAAAA,EAAUO,KAAKC,MAAMF,EAAI,IAEzBL,EADNK,GAAQ,GAAKN,EAEbJ,EAAKQ,UAAUW,mBACb,mBACOlB,EAAMa,WAAWC,SAAS,EAAG,OAAOX,EAAQU,WAAWC,SAAS,EAAG,OAAOV,EAC9ES,WACAC,SAAS,EAAG,WAkBnB,SAASK,EAAaC,GACS,SAAzBA,EAAEC,OAAOC,aACXC,cAAcR,GACdK,EAAEC,OAAOC,YAAc,UAEvBP,EAAaS,YAAY,KAEvBhB,EADAQ,GAAU,IAET,KACHI,EAAEC,OAAOC,YAAc,QAvB3BvB,EAAKO,KAAKmB,iBAAiB,QAASL,IAClCM,EAAe,SACZC,KAAKC,IACEC,MAAAA,EAAgB,OAARD,EAAe,GAAKA,EAE3BC,OADPA,EAAMC,KAAKd,GACJa,IAGRF,KAAKE,GAASH,EAAe,QAAS,MAAOG,IAC7CE,MAAMC,QAAQC,OAGnBlC,EAAKM,YAAYoB,iBAAiB,QAASN,GAe3C,MAAMO,EAAiB,CAACQ,EAAKC,EAAO,MAAOC,EAAO,MAGzC,OAAA,IAAIC,QAAQ,CAACT,EAAKU,KACvBC,WAAW,KACL7B,KAAK8B,SAAW,GACL,QAATL,EACFP,EAAIa,KAAKC,MAAMC,aAAaC,QAAQV,KAClB,QAATC,GACTQ,aAAaE,QAAQX,EAAKO,KAAKK,UAAUV,IACzCR,GAAI,IAEJU,EAAI,gBAEDA,EAAI,YAbM,EAACS,EAAKC,IAAQtC,KAAKC,MAAMD,KAAK8B,UAAYQ,EAAMD,GAAOA,GAcvEE,CAAa,IAAM,SAG1BvB,EAAe,SACZC,KAAKE,IACU,OAAVA,GAEJA,EAAMqB,QAAQjC,KAEfc,MAAMC,QAAQC","file":"src.ab83116b.js","sourceRoot":"../src","sourcesContent":["import './css/styles.css';\n\nconst refs = {\n  hours: document.querySelector('#hours'),\n  minutes: document.querySelector('#minutes'),\n  secunds: document.querySelector('#secunds'),\n  targetTimer: document.querySelector('#target-timer'),\n  save: document.querySelector('#save'),\n  timestamp: document.querySelector('#timestamp'),\n};\n\nfunction convertS(s) {\n  const hours = Math.floor(s / 60 / 60);\n  s = s - 60 * 60 * hours;\n  const minutes = Math.floor(s / 60);\n  s = s - 60 * minutes;\n  const secunds = s;\n  refs.hours.innerHTML = hours.toString().padStart(2, 0);\n  refs.minutes.innerHTML = minutes.toString().padStart(2, 0);\n  refs.secunds.innerHTML = secunds.toString().padStart(2, 0);\n}\nlet secund = 0;\nlet intervalId;\n\nfunction printTimeStamp(s) {\n  const hours = Math.floor(s / 60 / 60);\n  s = s - 60 * 60 * hours;\n  const minutes = Math.floor(s / 60);\n  s = s - 60 * minutes;\n  const secunds = s;\n  refs.timestamp.insertAdjacentHTML(\n    'beforeend',\n    `<li>${hours.toString().padStart(2, 0)}: ${minutes.toString().padStart(2, 0)}: ${secunds\n      .toString()\n      .padStart(2, 0)}</li>`,\n  );\n}\n\nrefs.save.addEventListener('click', e => {\n  imitatedServer('times')\n    .then(res => {\n      const times = res === null ? [] : res;\n      times.push(secund);\n      return times;\n      //  console.log(res);\n    })\n    .then(times => imitatedServer('times', 'SET', times))\n    .catch(console.log);\n});\n\nrefs.targetTimer.addEventListener('click', onTimerClick);\n\nfunction onTimerClick(e) {\n  if (e.target.textContent === 'Stop') {\n    clearInterval(intervalId);\n    e.target.textContent = 'Start';\n  } else {\n    intervalId = setInterval(() => {\n      secund += 1;\n      convertS(secund);\n    }, 1000);\n    e.target.textContent = 'Stop';\n  }\n}\n\nconst imitatedServer = (key, type = 'GET', data = {}) => {\n  const getRandomInt = (min, max) => Math.floor(Math.random() * (max - min) + min);\n\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      if (Math.random() > 0.1) {\n        if (type === 'GET') {\n          res(JSON.parse(localStorage.getItem(key)));\n        } else if (type === 'SET') {\n          localStorage.setItem(key, JSON.stringify(data));\n          res(true);\n        } else {\n          rej('invalid type');\n        }\n      } else rej('oops!!!');\n    }, getRandomInt(1000, 3000));\n  });\n};\nimitatedServer('times')\n  .then(times => {\n    if (times === null) return;\n    // console.log(times);\n    times.forEach(printTimeStamp);\n  })\n  .catch(console.log);\n//   добавить возможность удалять сохранённые точки\n// добавить возможность начинять отсчет с сохранённой точки\n"]}